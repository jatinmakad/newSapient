{"version":3,"file":"static/js/265.0140a108.chunk.js","mappings":"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","sources":["Component/Survery/UploadDocument.js","Component/Survery/UploadDocumentMain.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Header from \"../Common/Header\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../Common/Loader\";\r\nimport axios from \"axios\";\r\nimport {\r\n  GetDocumentFunction,\r\n  UpdloadDocumentFunction,\r\n} from \"../../Slice/CoordinationSlice\";\r\nimport ToastComponent from \"../Common/TaostComponent\";\r\nexport default function UploadDocument({ setDataRow, dataRow, func }) {\r\n  const { id, type } = useParams();\r\n  const { isAuth } = useSelector((state) => state.Login);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [editData, setEditData] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!isAuth) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [isAuth]);\r\n\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const handleFileInputChange = (e, id) => {\r\n    const file = e.target.files[0];\r\n    setSelectedFile({\r\n      ...selectedFile,\r\n      [e.target.name]: file,\r\n    });\r\n    previewFile(file, id);\r\n  };\r\n\r\n  const previewFile = async (file, id) => {\r\n    const reader = await new FileReader();\r\n    reader.addEventListener(\"load\", () => console.log());\r\n    Object.assign(file, {\r\n      preview: URL.createObjectURL(file),\r\n    });\r\n    reader.readAsDataURL(file);\r\n    let imagetoSet = file.preview;\r\n    let newData = dataRow.map((item) =>\r\n      item.id !== id\r\n        ? item\r\n        : { ...item, image: imagetoSet, base64EncodedImage: file }\r\n    );\r\n    setDataRow(newData);\r\n  };\r\n  const handleSubmitFile = (file, name) => {\r\n    if (!file) return;\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      uploadImage(reader.result, name);\r\n    };\r\n  };\r\n  const uploadImage = async (base64EncodedImage, name) => {\r\n    let body = JSON.stringify({\r\n      data: base64EncodedImage,\r\n      uniqueJobId: id,\r\n      name: name,\r\n    });\r\n    setLoading(true);\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const { data } = await axios.put(\r\n      \"https://sap-data-management-mcs.herokuapp.com/upload-documents\",\r\n      body,\r\n      config\r\n    );\r\n    if (data.success === true) {\r\n      func();\r\n      setLoading(false);\r\n      ToastComponent(\"Document Uploaded SuccessFully\", \"success\");\r\n    }\r\n  };\r\n  return loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <div className=\"m-2 md:m-10 mt-4 p-2 md:p-5 rounded-3xl\">\r\n      <Header title=\"Upload Document\" />\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"simple table\" stickyHeader>\r\n          <TableBody>\r\n            {dataRow\r\n              ? dataRow.map((row, index) => {\r\n                  return (\r\n                    <React.Fragment key={\" \" + index}>\r\n                      <CommonTable\r\n                        row={row}\r\n                        handleFileInputChange={handleFileInputChange}\r\n                        handleSubmitFile={handleSubmitFile}\r\n                        setEditOpen={setEditOpen}\r\n                        setEditData={setEditData}\r\n                      />\r\n                    </React.Fragment>\r\n                  );\r\n                })\r\n              : null}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div className=\"flex justify-end items-center w-full mt-2\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => navigate(-1)}\r\n        >\r\n          Close\r\n        </Button>\r\n      </div>\r\n      <EditBox\r\n        open={editOpen}\r\n        setOpen={setEditOpen}\r\n        editData={editData}\r\n        func={func}\r\n        id={id}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nconst CommonTable = ({\r\n  row,\r\n  handleSubmitFile,\r\n  handleFileInputChange,\r\n  setEditOpen,\r\n  setEditData,\r\n}) => {\r\n  console.log(row, \"row\");\r\n  return (\r\n    <TableRow key={row.id}>\r\n      <TableCell align=\"left\">{row.name}</TableCell>\r\n      {row.uploaded == false ? (\r\n        <>\r\n          <TableCell component=\"th\" align=\"left\" scope=\"row\">\r\n            <CommonInput\r\n              id={row.id}\r\n              name={row.name}\r\n              handleFileInputChange={handleFileInputChange}\r\n              previewSource={row.image}\r\n            />\r\n          </TableCell>\r\n          <TableCell align=\"left\">\r\n            <button\r\n              className=\"bg-gray-300 hover:bg-red-400 hover:text-white text-gray-800 font-normal tracking-wide py-2 px-4 rounded inline-flex items-center\"\r\n              onClick={() => handleSubmitFile(row.base64EncodedImage, row.name)}\r\n              type=\"submit\"\r\n            >\r\n              <svg\r\n                class=\"fill-current w-4 h-4 mr-2 -rotate-180\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M13 8V2H7v6H2l8 8 8-8h-5zM0 18h20v2H0v-2z\" />\r\n              </svg>\r\n              <span>Upload</span>\r\n            </button>\r\n          </TableCell>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <TableCell>\r\n            <span className=\"mr-3\">Uploaded</span>\r\n            <a href={row.url} target=\"_blank\" download>\r\n              <span className=\"text-blue-700 font-medium\">Preview</span>\r\n            </a>\r\n          </TableCell>\r\n          <TableCell>\r\n            <button\r\n              className=\"bg-gray-300 hover:bg-red-400 hover:text-white text-gray-800 font-normal tracking-wide py-2 px-4 rounded inline-flex items-center\"\r\n              onClick={() => {\r\n                setEditOpen(true);\r\n                setEditData(row);\r\n              }}\r\n            >\r\n              <svg\r\n                class=\"fill-current w-4 h-4 mr-2 -rotate-180\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M13 8V2H7v6H2l8 8 8-8h-5zM0 18h20v2H0v-2z\" />\r\n              </svg>\r\n              <span>Edit</span>\r\n            </button>\r\n          </TableCell>\r\n        </>\r\n      )}\r\n    </TableRow>\r\n  );\r\n};\r\nconst CommonInput = ({ id, name, handleFileInputChange, previewSource }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  return (\r\n    <div className=\"flex w-full justify-between items-center\">\r\n      <input\r\n        id={id}\r\n        accept=\".png, .jpg, .jpeg, .pdf\"\r\n        type=\"file\"\r\n        name={name}\r\n        onChange={(e) => handleFileInputChange(e, id)}\r\n        className=\"form-input\"\r\n      />\r\n      {previewSource && (\r\n        <>\r\n          <p className=\"text-blue-700 cursor-pointer\" onClick={handleOpen}>\r\n            Preview\r\n          </p>\r\n          <PreviewBox\r\n            open={open}\r\n            handleClose={handleClose}\r\n            previewSource={previewSource}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst PreviewBox = ({ open, handleClose, previewSource }) => {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n      fullWidth\r\n      maxWidth={\"lg\"}\r\n    >\r\n      <DialogContent style={{ height: \"700px\" }}>\r\n        <iframe className=\"w-full h-full object-cover\" src={previewSource} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} variant=\"contained\" color=\"error\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst EditBox = ({ open, setOpen, editData, func, id }) => {\r\n  const [img, setImg] = useState(\"\");\r\n  const [previewImage, setPriviewImage] = useState(\"\");\r\n  const handleSubmitFile = (file) => {\r\n    if (!file) return;\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      setImg(reader.result);\r\n      setPriviewImage(file);\r\n    };\r\n  };\r\n  const updateFunc = async () => {\r\n    let body = JSON.stringify({\r\n      data: img,\r\n      uniqueJobId: id,\r\n      public_id: editData.public_id,\r\n    });\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const { data } = await axios.put(\r\n      \"https://sap-data-management-mcs.herokuapp.com/edit-documents\",\r\n      body,\r\n      config\r\n    );\r\n    if (data.success === true) {\r\n      func();\r\n      setOpen(false);\r\n      setImg(\"\");\r\n      setPriviewImage(\"\");\r\n      ToastComponent(\"Document Updated SuccessFully\", \"success\");\r\n    }\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={() => {\r\n        setOpen(false);\r\n        setImg(\"\");\r\n        setPriviewImage(\"\");\r\n      }}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n      fullWidth\r\n      maxWidth={\"md\"}\r\n    >\r\n      <DialogContent sx={{ height: \"700px\" }}>\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => handleSubmitFile(e.target.files[0])}\r\n          className=\"mb-3\"\r\n        />\r\n        {previewImage && previewImage.type == \"image/jpeg\" ? (\r\n          <img\r\n            src={URL.createObjectURL(previewImage)}\r\n            width=\"500px\"\r\n            height=\"100%\"\r\n          />\r\n        ) : previewImage.type == \"application/pdf\" ? (\r\n          <iframe\r\n            src={URL.createObjectURL(previewImage)}\r\n            width=\"500px\"\r\n            height=\"100%\"\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {img ? (\r\n          <Button onClick={updateFunc} variant=\"contained\" color=\"primary\">\r\n            Update\r\n          </Button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <Button\r\n          onClick={() => {\r\n            setOpen(false);\r\n            setImg(\"\");\r\n            setPriviewImage(\"\");\r\n          }}\r\n          variant=\"contained\"\r\n          color=\"error\"\r\n        >\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDocument } from \"../../Slice/CoordinationSlice\";\r\nimport Loader from \"../Common/Loader\";\r\nimport axios from \"axios\";\r\nimport UploadDocument from \"./UploadDocument\";\r\nimport { Engineering, Fire, Marine } from \"../Common/Constant/Constant\";\r\nexport default function UploadDocumentMain() {\r\n  const [dataRow, setDataRow] = useState(\"\");\r\n  const { id, type } = useParams();\r\n  const { isAuth } = useSelector((state) => state.Login);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [loading,setLoading] = useState(false)\r\n  // const { document } = useSelector((state) => state.Coordination.getDocument);\r\n  // const { uploadDocumentSuccess } = useSelector(\r\n  //   (state) => state.Coordination.uploadDocument\r\n  // );\r\n  useEffect(() => {\r\n    if (isAuth) {\r\n      func();\r\n    }\r\n    if (!isAuth) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [isAuth, id]);\r\n\r\n  const func = async () => {\r\n    setLoading(true)\r\n    const { data } = await axios.get(\r\n      `https://sap-data-management-mcs.herokuapp.com/get-jobs-by-id?uniqueJobId=${id}`\r\n    );\r\n    if (data.success === true) {\r\n      let rowUploaded =\r\n        type === \"Engineering\"\r\n          ? Engineering\r\n          : type === \"Fire\"\r\n          ? Fire\r\n          : type === \"Marine\"\r\n          ? Marine\r\n          : \"\";\r\n      let updatedArray = rowUploaded.map((x) => {\r\n        const item = data.data[0].documents.find((r) => r.name === x.name);\r\n        return item ? { ...x, ...item, uploaded: true } : x;\r\n      });\r\n      setDataRow(updatedArray);\r\n      setLoading(false)\r\n      // getDocument(updatedArray);\r\n    }\r\n  };\r\n  return !loading ? (\r\n    <UploadDocument setDataRow={setDataRow} dataRow={dataRow} func={func} />\r\n  ) : (\r\n    <Loader />\r\n  );\r\n}\r\n"],"names":["UploadDocument","setDataRow","dataRow","func","useParams","id","isAuth","type","useSelector","state","Login","navigate","useNavigate","useDispatch","useState","loading","setLoading","editOpen","setEditOpen","editData","setEditData","useEffect","selectedFile","setSelectedFile","handleFileInputChange","e","file","target","files","name","previewFile","FileReader","reader","addEventListener","console","log","Object","assign","preview","URL","createObjectURL","readAsDataURL","imagetoSet","newData","map","item","image","base64EncodedImage","handleSubmitFile","onloadend","uploadImage","result","body","JSON","stringify","data","uniqueJobId","config","headers","axios","success","ToastComponent","Loader","className","Header","title","TableContainer","component","Paper","Table","stickyHeader","TableBody","row","index","CommonTable","Button","variant","color","onClick","EditBox","open","setOpen","TableRow","TableCell","align","uploaded","scope","CommonInput","previewSource","class","xmlns","viewBox","d","href","url","download","accept","onChange","PreviewBox","handleClose","Dialog","onClose","fullWidth","maxWidth","DialogContent","style","height","src","DialogActions","img","setImg","previewImage","setPriviewImage","updateFunc","public_id","sx","width","UploadDocumentMain","rowUploaded","Engineering","Fire","Marine","updatedArray","x","documents","find","r"],"sourceRoot":""}